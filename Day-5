1.Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix.
This matrix has the following properties:
*Integers in each row are sorted from left to right.
*The first integer of each row is greater than the last integer of the previous row.

code-> bool searchMatrix(vector<vector<int>>& matrix, int target) {
        //Binary Search 
        int n=matrix.size();
        int m=matrix[0].size();
       int low=0,high=(n*m)-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(matrix[mid/m][mid%m]==target)
            {
                return true;
            }
            else if(target<matrix[mid/m][mid%m])
            {
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return false;
        
    }
