1.Remove Duplicates from sorted array
Input: nums = [0,0,1,1,1,2,2,3,3,4]
Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]
Explanation: Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).
code-> int removeDuplicates(vector<int>& nums) {
        int n=nums.size();
        if(n==0) return 0;
        int start=0;
        for(int i=0;i<n-1;i++){
            if(nums[i]!=nums[i+1]){
                nums[start++]=nums[i];
            }     
        }
        nums[start]=nums[n-1];
        return start+1;
    }
 2.Max Consecutive Ones.
   Given a binary array nums, return the maximum number of consecutive 1's in the array.
   Input: nums = [1,1,0,1,1,1]
   Output: 3
   Explanation: The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.
   code->int findMaxConsecutiveOnes(vector<int>& nums) {
        
            int count=0,maxcount=0;
            for(int i=0;i<nums.size();i++){
            if(nums[i]==1){
            count++;
            }
            if(nums[i]!=1){
            count=0;
            }
            maxcount=max(count,maxcount);
            }
            return maxcount;
    }
