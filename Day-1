1.Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.
code->void setZeroes(vector<vector<int>>& matrix) {
        //Tc = 2*(N*M), SC=O(1) 
    int col0=1,row=matrix.size(),col=matrix[0].size();
        for(int i=0;i<row;i++){
            if(matrix[i][0]==0) col0=0;
        for(int j=1;j<col;j++)
            if(matrix[i][j]==0)
                matrix[i][0]=matrix[0][j]=0;
            
        }
        
        for(int i=row-1;i>=0;i--){
            for(int j=col-1;j>=1;j--)
                if(matrix[i][0]==0 || matrix[0][j]==0)
                    matrix[i][j]=0;
                if(col0==0)
                    matrix[i][0]=0;
        }
            
    }
 
2.Given an integer numRows, return the first numRows of Pascal's triangle.
  In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:
  https://leetcode.com/problems/pascals-triangle/
  
code->  vector<vector<int>> generate(int numRows) {
        vector<vector<int>>r(numRows);
        for(int i=0;i<numRows;i++){
            r[i].resize(i+1);
            r[i][0]=r[i][i]=1;
            
            for(int j=1;j<i;j++)
                r[i][j]=r[i-1][j-1]+r[i-1][j];
        }
        return r;
    }
  
    
